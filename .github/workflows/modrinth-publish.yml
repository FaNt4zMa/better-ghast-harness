name: Modrinth Release Upload

on:
  release:
    types: [published]

permissions:
  contents: write

env:
  MODRINTH_SLUG: fantazs-better-ghast-harness
  MOD_ID: better_ghast_harness
  PACK_NAME: Better Ghast Harness
  PACK_DESCRIPTION: Faster, stronger, shinier = Happier Ghast!
  LICENSE: MIT

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download release asset
        run: |
          gh release download ${{ github.event.release.tag_name }} \
            -p "Better-Ghast-Harness-${{ github.event.release.tag_name }}.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish datapack to Modrinth
        uses: cloudnode-pro/modrinth-publish@v2
        with:
          token: ${{ secrets.MODRINTH_TOKEN }}
          project: tXHowlQJ
          name: ${{ github.event.release.name }}
          files: '["Better-Ghast-Harness-${{ github.event.release.tag_name }}.zip"]'
          version: ${{ github.event.release.tag_name }}
          changelog: ${{ github.event.release.body }}
          loaders: '["minecraft"]'
          game-versions: |-
            1.21.6
            1.21.7
            1.21.8
            1.21.9
            1.21.10

      - name: Bundle datapack as mod
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          MOD_ID="${{ env.MOD_ID }}"
          ICON_NAME="${{ env.MODRINTH_SLUG }}_pack.png"
          PROJECT_URL="https://modrinth.com/datapack/${{ env.MODRINTH_SLUG }}"
          
          # Extract the datapack
          mkdir mod-temp
          unzip "Better-Ghast-Harness-${VERSION}.zip" -d mod-temp
          
          # Copy and rename pack icon for mod loaders
          if [ -f "mod-temp/pack.png" ]; then
            cp mod-temp/pack.png "mod-temp/${ICON_NAME}"
          fi
          
          # Create META-INF directory
          mkdir -p mod-temp/META-INF
          
          # Create mods.toml (Forge)
          cat > mod-temp/META-INF/mods.toml << EOF

          modLoader = 'lowcodefml'
          loaderVersion = '[40,)'
          license = '${{ env.LICENSE }}'
          showAsResourcePack = false
          mods = [
          	{ modId = '${MOD_ID}', version = '1-${VERSION}', displayName = '${{ env.PACK_NAME }}', description = '${{ env.PACK_DESCRIPTION }}', logoFile = '${ICON_NAME}', updateJSONURL = 'https://api.modrinth.com/updates/tXHowlQJ/forge_updates.json', credits = 'Generated by GitHub Actions', authors = 'Fantaz', displayURL = '${PROJECT_URL}' },
          ]

          EOF
          
          # Create neoforge.mods.toml (NeoForge)
          cat > mod-temp/META-INF/neoforge.mods.toml << EOF

          modLoader = 'javafml'
          loaderVersion = '[1,)'
          license = '${{ env.LICENSE }}'
          showAsResourcePack = false
          mods = [
          	{ modId = '${MOD_ID}', version = '1-${VERSION}', displayName = '${{ env.PACK_NAME }}', description = '${{ env.PACK_DESCRIPTION }}', logoFile = '${ICON_NAME}', updateJSONURL = 'https://api.modrinth.com/updates/tXHowlQJ/forge_updates.json?neoforge=only', credits = 'Generated by GitHub Actions', authors = 'Fantaz', displayURL = '${PROJECT_URL}' },
          ]

          EOF
          
          # Create fabric.mod.json (Fabric)
          cat > mod-temp/fabric.mod.json << EOF
          {
            "schemaVersion": 1,
            "id": "${MOD_ID}",
            "version": "${VERSION}",
            "name": "${{ env.PACK_NAME }}",
            "description": "${{ env.PACK_DESCRIPTION }}",
            "authors": ["Fantaz"],
            "contact": {
              "homepage": "${PROJECT_URL}"
            },
            "license": "${{ env.LICENSE }}",
            "icon": "${ICON_NAME}",
            "environment": "*",
            "depends": {
              "fabric-resource-loader-v0": "*"
            }
          }
          EOF
          
          # Create quilt.mod.json (Quilt)
          cat > mod-temp/quilt.mod.json << EOF
          {
            "schema_version": 1,
            "quilt_loader": {
              "group": "com.modrinth",
              "id": "${MOD_ID}",
              "version": "${VERSION}",
              "metadata": {
                "name": "${{ env.PACK_NAME }}",
                "description": "${{ env.PACK_DESCRIPTION }}",
                "contributors": {
                  "Fantaz": "Member"
                },
                "contact": {
                  "homepage": "${PROJECT_URL}"
                },
                "icon": "${ICON_NAME}"
              },
              "intermediate_mappings": "net.fabricmc:intermediary",
              "depends": [
                {
                  "id": "quilt_resource_loader",
                  "versions": "*",
                  "unless": "fabric-resource-loader-v0"
                }
              ]
            }
          }
          EOF
          
          # Package as JAR
          cd mod-temp
          jar cf "../${{ env.MODRINTH_SLUG }}-${VERSION}.jar" .
          cd ..
          
          # Cleanup
          rm -rf mod-temp

      - name: Publish mod to Modrinth
        uses: cloudnode-pro/modrinth-publish@v2
        with:
          token: ${{ secrets.MODRINTH_TOKEN }}
          project: tXHowlQJ
          name: ${{ github.event.release.name }}
          files: '["${{ env.MODRINTH_SLUG }}-${{ github.event.release.tag_name }}.jar"]'
          version: ${{ github.event.release.tag_name }}+mod
          loaders: '["fabric", "forge", "neoforge", "quilt"]'
          game-versions: |-
            1.21.6
            1.21.7
            1.21.8
            1.21.9
            1.21.10
          dependencies: |-
            [{
                "project_id": "P7dR8mSH",
                "dependency_type": "required"
            }]